#include <mpi.h>
#include <stdio.h>
#include <unistd.h>
#include <string.h>
#include <stdlib.h>
#include "mpi.h"
void cho_Waitany(MPI_Status *status);

struct sFactors
{
  int *ptrFactor;
  int multiplicity;
  int upperBound;
}pst1,pst2,pst3;

void writeFactorToDisk(struct sFactors *pstFactors){
	int NumberOfElements = pstFactors->multiplicity+1;
	char buf[30];
	for(int i = 0;i<NumberOfElements;i++){
		snprintf(buf, sizeof(buf), "./saves/sFactor%i.bin",i );
		FILE *fp;
		fp = fopen( buf, "wb");
		int numberLength = pstFactors[i].ptrFactor[0]+1;
		fwrite(&(numberLength),sizeof(int),1,fp );
		fwrite(&(pstFactors[i].multiplicity),sizeof(int),1,fp );
		fwrite(&(pstFactors[i].upperBound),sizeof(int),1,fp );
		fwrite(&(pstFactors[i].ptrFactor[0]),sizeof(int),numberLength,fp);
		fclose(fp);
	}
}
void readFactorFromDisk(struct sFactors *pstFactors){
	int NumberOfElements = pstFactors->multiplicity+1;
	char buf[30];
	int fileNr = 0;
	for(;;){
		snprintf(buf, sizeof(buf), "./saves/sFactor%i.bin",fileNr );
		FILE *fp;
		fp = fopen( buf, "rb");
		int ptrValueLength = 0;
		fseek(fp, 0, SEEK_SET);
		fread(&(ptrValueLength),sizeof(int),1,fp );
		fread(&(pstFactors[fileNr].multiplicity),sizeof(int),1,fp );
		fread(&(pstFactors[fileNr].upperBound),sizeof(int),1,fp );
		fread(&(pstFactors[fileNr].ptrFactor[0]),sizeof(int),ptrValueLength,fp);
		fclose(fp);
	}
}

int main(int argc, char** argv) {
	struct sFactors pstFactors[3];
	pst1.multiplicity=3;
	pst1.upperBound=1;
	int ptr1[] = {1,2,3,4};
	pst1.ptrFactor= &ptr1;

	pst1.multiplicity=1;
	pst1.upperBound=1;
	int ptr1[] = {5,6,7,8};
	pst1.ptrFactor= &ptr1;

	pst1.multiplicity=2;
	pst1.upperBound=1;
	int ptr1[] = {9,10,11,12};
	pst1.ptrFactor= &ptr1;


}
